@startuml

abstract class Rule {
    - factor: Double
    + apply(entity: Entity, neighbours: List<Entity>, universe: Universe): Vector3D
    # {abstract} appliesTo(type: Type): Boolean
    # {abstract} doApply(entity: Entity, neighbours: List<Entity>, universe: Universe): Vector3D
}

abstract class FlockRule {
    # applyToBoid(entity: Entity, boidsAtSight: List<Entity>, universe: Universe): Vector3D
}

class Separation {
    - distance: Double
}

class Cohesion

class Boundary

class Alignment

class TendencyTo {
    - interactsWith: Type
    - appliesTo: Type
}

FlockRule -up-> Rule
TendencyTo -up-> Rule
Boundary -up-> Rule
Cohesion -up-> FlockRule
Separation -up-> FlockRule
Alignment -up-> FlockRule

@enduml
